#include"标头.h"
typedef struct QNode* queue;
struct QNode {
	ElementType Data[maxsize];
	int front, rear;
};

queue CreateQueue();
void AddQ(queue q, ElementType x);
int IsFull(queue q);
int IsEmpty(queue q);
ElementType DeleteQ(queue q);

queue CreateQueue() {
	queue q;
	q = (queue)malloc(sizeof(struct QNode));
	q->front = -1;
	q->rear = -1;
	return q;
}

void AddQ(queue q, ElementType x) {
	if (IsFull(q))
	{
		printf("队列满");
			return;
	}
	else
	{
		q->rear = (q->rear + 1) % maxsize;
		q->Data[q->rear] = x;
	}
}

int IsFull(queue q) {
	if ((q->rear + 1) % maxsize == q->front)
		return 1;
	else
		return 0;
}

int IsEmpty(queue q) {
	if (q->rear == q->front)
		return 1;
	else
		return 0;
}

ElementType DeleteQ(queue q) {
	if (IsEmpty(q))
	{
		printf("队列空");
		return 0;
	}
	else
	{
		q->front = (q->front + 1) % maxsize;
		return q->Data[q->front];
	}
}

int main() {
	Queue Q;
	Q = CreateQueue();
	AddQ(Q, 3);
	printf("3入队\n");
	AddQ(Q, 5);
	printf("5入队\n");
	AddQ(Q, 11);
	printf("11入队\n");
	printf("%d出队\n", DeleteQ(Q));
	printf("%d出队\n", DeleteQ(Q));
	return 0;
}
